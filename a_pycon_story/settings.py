"""
Django settings for A Pycon Story project.

Generated by 'django-admin startproject' using Django.

For more information on this file, see
https://docs.djangoproject.com/en/stable/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/stable/ref/settings/
"""

import copy
import os
import string
from typing import List

from configurations import Configuration, values

from .base_settings import BaseSettings
from .settings_mixins import DjangoSettings, RestFrameworkSettings


def gettext(s):
    return s


class ProjectDefault(
    RestFrameworkSettings,
    BaseSettings,
    DjangoSettings,
    Configuration,
):
    """
    The default settings from the Django project template.

    Django Configurations
    https://django-configurations.readthedocs.io
    """

    INSTALLED_APPS = [
        "profiles",
        "django.contrib.auth",
        "django.contrib.contenttypes",
        "django.contrib.sessions",
        "django.contrib.sites",
        "django.contrib.messages",
        "django.contrib.staticfiles",
        "django.contrib.admin",
        "widget_tweaks",
        "rest_framework",
        "a_pycon_story",
        "pycon_service",
    ]

    MIDDLEWARE = [
        "django.middleware.security.SecurityMiddleware",
        "django.contrib.sessions.middleware.SessionMiddleware",
        "django.middleware.common.CommonMiddleware",
        "django.contrib.auth.middleware.AuthenticationMiddleware",
        "django.contrib.messages.middleware.MessageMiddleware",
        "django.middleware.clickjacking.XFrameOptionsMiddleware",
        "django.middleware.locale.LocaleMiddleware",
    ]

    TEMPLATES = [
        {
            "BACKEND": "django.template.backends.django.DjangoTemplates",
            "DIRS": [
                os.path.join(DjangoSettings.BASE_DIR, "templates", "project", "common"),
                os.path.join(DjangoSettings.BASE_DIR, "templates", "project"),
                os.path.join(DjangoSettings.BASE_DIR, "templates"),
            ],
            # "APP_DIRS": True,
            "OPTIONS": {
                "context_processors": [
                    "django.contrib.auth.context_processors.auth",
                    "django.contrib.messages.context_processors.messages",
                    "django.template.context_processors.i18n",
                    "django.template.context_processors.debug",
                    "django.template.context_processors.request",
                    "django.template.context_processors.media",
                    "django.template.context_processors.csrf",
                    "django.template.context_processors.tz",
                    "django.template.context_processors.static",
                ],
                "loaders": [
                    # 'admin_tools.template_loaders.Loader',
                    "django.template.loaders.filesystem.Loader",
                    "django.template.loaders.app_directories.Loader",
                    # 'django.template.loaders.eggs.Loader', # Removed in Django>=2
                ],
            },
        },
    ]

    LOCALE_PATHS = (
        # Only absolute path
        os.path.join(DjangoSettings.BASE_DIR, "locale"),
    )

    # Database
    # https://docs.djangoproject.com/en/stable/ref/settings/#databases

    DATABASES = values.DatabaseURLValue()

    # Static files (CSS, JavaScript, Images)
    # https://docs.djangoproject.com/en/stable/howto/static-files/

    STATIC_ROOT = values.Value(default=os.path.join(DjangoSettings.BASE_DIR, "static"))

    STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

    # Stored files
    # https://docs.djangoproject.com/en/stable/topics/files/

    MEDIA_URL = "/media/"

    MEDIA_ROOT = DjangoSettings.BASE_DIR / "media"

    CACHES = {
        "default": {
            "BACKEND": "django.core.cache.backends.dummy.DummyCache",
        }
    }

    # Additional locations of static files
    STATICFILES_DIRS = (
        # Put strings here, like "/home/html/static" or "C:/www/django/static".
        # Always use forward slashes, even on Windows.
        # Don't forget to use absolute paths, not relative paths.
        os.path.join(DjangoSettings.BASE_DIR, "static_dev"),
        os.path.join(BaseSettings.PROJECT_PATH, "a_pycon_story/static"),
    )

    # Email Settings
    # https://docs.djangoproject.com/en/stable/topics/email/

    DEFAULT_FROM_EMAIL = "apyconstory.com <info@apyconstory.com>"

    EMAIL_SUBJECT_PREFIX = "[A Pycon Story] "

    EMAIL_USE_LOCALTIME = True

    SERVER_EMAIL = values.EmailValue("server@apyconstory.com")

    EMAIL_BACKEND = "django.core.mail.backends.smtp.EmailBackend"

    if "post_office" in INSTALLED_APPS:
        EMAIL_BACKEND = "post_office.EmailBackend"
        POST_OFFICE = {
            "DEFAULT_PRIORITY": "now",
            "BACKENDS": {
                "default": "django_q_email.backends.DjangoQBackend",
            },
        }
    # Email URL
    # https://django-configurations.readthedocs.io/en/stable/values/

    EMAIL_URL = values.EmailURLValue("console://")

    # Translation
    # https://docs.djangoproject.com/en/stable/topics/i18n/translation/

    LANGUAGES = (("en", "English"), ("it", "Italiano"))

    IS_HTTPS = values.BooleanValue(environ_name="IS_HTTPS", default=False)

    # Clickjacking Protection
    # https://docs.djangoproject.com/en/stable/ref/clickjacking/

    X_FRAME_OPTIONS = "SAMEORIGIN"  # Default: 'SAMEORIGIN'

    RAVEN_CONFIG = None
    REST_FRAMEWORK_DEBUG = False
    FLUENT_DASHBOARD_DEBUG = False
    SENTRY_APPS = ()
    SENTRY_MIDDLEWARE = ()
    SENTRY_LOGGING = None
    DRF_YASG_EXCLUDE_VIEWS: List[str] = [
        "password_policies.views",
        "password_policies_rest.views",
    ]
    DRF_YASG_SHOW_FULL_URL = True


class Local(ProjectDefault):
    """The local settings."""

    # Application definition

    INSTALLED_APPS = copy.deepcopy(ProjectDefault.INSTALLED_APPS)
    MIDDLEWARE = ProjectDefault.MIDDLEWARE.copy()
    ROSETTA_SHOW_IN_DASHBOARD = True
    INSTALLED_APPS += ("rosetta",)
    # Django Debug Toolbar
    # https://django-debug-toolbar.readthedocs.io/en/stable/configuration.html

    REST_FRAMEWORK_DEBUG = values.BooleanValue(environ_name="REST_FRAMEWORK_DEBUG", default=False)

    if REST_FRAMEWORK_DEBUG and "rest_framework" in INSTALLED_APPS:
        ProjectDefault.REST_FRAMEWORK["DEFAULT_RENDERER_CLASSES"].append(  # type: ignore
            "rest_framework.renderers.BrowsableAPIRenderer"
            # 'rest_framework.renderers.HTMLFormRenderer'
        )

    INTERNAL_IPS = values.ListValue([], environ_name="ALLOWED_HOSTS")
    # Django Fluent Dashboard

    # Django Extensions
    # https://django-extensions.readthedocs.io/en/stable/graph_models.html
    try:
        import django_extensions  # noqa
    except ModuleNotFoundError:  # pragma: no cover
        pass
    else:  # pragma: no cover
        INSTALLED_APPS.append("django_extensions")
        SHELL_PLUS_PRINT_SQL = True
        GRAPH_MODELS = {
            "all_applications": True,
            "arrow_shape": "diamond",
            "disable_abstract_fields": False,
            "disable_fields": False,
            "exclude_columns": [
                "date_joined",
                "is_active",
                "is_staff",
                "is_superuser",
                "last_login",
            ],
            "exclude_models": ",".join(
                (
                    "AbstractBaseSession",
                    "AbstractBaseUser",
                    "AbstractUser",
                    "ContentType",
                    "Group",
                    "LogEntry",
                    "Permission",
                    "PermissionsMixin",
                    "Session",
                    "UserGroup",
                )
            ),
            "group_models": True,
            "hide_edge_labels": True,
            "inheritance": False,
            "language": "it",
            "layout": "dot",
            "relations_as_fields": True,
            "theme": "original",
            "verbose_names": True,
        }


class Testing(ProjectDefault):
    """The testing settings."""

    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.sqlite3",
            "NAME": "a_pycon_story",
        }
    }

    USER_CLIENT_CLASS = "pycon_service.mocked_clients.FakeBaseAdultUserClient"

    USER_SERVICE_API_KEY = "test-api-key"
    USER_SERVICE_BASE_URL = "http://test-domain.com"

    SOUTH_TESTS_MIGRATE = False
    SECRET_KEY = string.ascii_letters
    # Debug
    # https://docs.djangoproject.com/en/stable/ref/settings/#debug

    DEBUG = False
    ACTIVE_DEBUG_TOOLBAR = False

    # Email URL
    # https://django-configurations.readthedocs.io/en/stable/values/

    EMAIL = "dummy://"

    # During testing, ensure that the STATICFILES_STORAGE setting is set to the default.
    # https://docs.djangoproject.com/en/stable/ref/contrib/staticfiles/

    STATICFILES_STORAGE = "django.contrib.staticfiles.storage.StaticFilesStorage"

    # The MD5 based password hasher is much less secure but faster
    # https://docs.djangoproject.com/en/3.1/topics/auth/passwords/

    PASSWORD_HASHERS = [
        "django.contrib.auth.hashers.MD5PasswordHasher",
    ]


class Remote(ProjectDefault):
    """The remote settings."""

    ENVIRONMENT = "remote"
    SENTRY_IGNORE_LOGGER = [
        "login_logger_error",
        "login_logger_success",
    ]

    WEBPACK_CACHE = True
    WEBPACK_LOADER = {
        "DEFAULT": {
            "CACHE": True,
            "STATS_FILE": os.path.join(BaseSettings.PROJECT_PATH, "static_dist", "webpack-stats.json"),
            "POLL_INTERVAL": 0.1,
            "TIMEOUT": None,
            "IGNORE": [r".+\.hot-update.js"],
        }
    }
    STATICFILES_DIRS = (
        # Put strings here, like "/home/html/static" or "C:/www/django/static".
        # Always use forward slashes, even on Windows.
        # Don't forget to use absolute paths, not relative paths.
        os.path.join(DjangoSettings.BASE_DIR, "static_dist"),
        os.path.join(BaseSettings.PROJECT_PATH, "a_pycon_story/static"),
    )

    # Django Storages
    # https://django-storages.readthedocs.io/en/stable/


class Development(Remote):
    """The development settings."""

    # Debug
    # https://docs.djangoproject.com/en/stable/ref/settings/#debug

    DEBUG = values.BooleanValue(False)


class Integration(Remote):
    """The integratrion settings."""

    ENVIRONMENT = "staging"
    # Debug
    # https://docs.djangoproject.com/en/stable/ref/settings/#debug

    DEBUG = False
    ROSETTA_SHOW_IN_DASHBOARD = False


class Production(Remote):
    """The production settings."""

    ENVIRONMENT = "production"
    # Debug
    # https://docs.djangoproject.com/en/stable/ref/settings/#debug

    DEBUG = False
    ROSETTA_SHOW_IN_DASHBOARD = False

    # Email URL
    # https://django-configurations.readthedocs.io/en/stable/values/

    EMAIL = values.EmailURLValue()

    # Security
    # https://docs.djangoproject.com/en/stable/topics/security/

    SECURE_BROWSER_XSS_FILTER = True

    SECURE_CONTENT_TYPE_NOSNIFF = True

    # Persistent connections
    # https://docs.djangoproject.com/en/stable/ref/databases/#general-notes

    # CONN_MAX_AGE = None
